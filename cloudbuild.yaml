availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/github-username/versions/latest
      env: 'GITHUB_USER'
    - versionName: projects/$PROJECT_ID/secrets/github-token/versions/latest
      env: 'GITHUB_TOKEN'

steps:
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - -c
      - |
        docker build \
          --build-arg GITHUB_USER_ARG=$$GITHUB_USER \
          --build-arg GITHUB_TOKEN_ARG=$$GITHUB_TOKEN \
          -t ${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:$COMMIT_SHA \
          .
    secretEnv: ['GITHUB_USER', 'GITHUB_TOKEN']
    id: 'Build Image'
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:$COMMIT_SHA'
    ]
    id: 'Push Image'
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - container
      - clusters
      - get-credentials
      - '${_GKE_CLUSTER_NAME}'
      - '--region=${_GKE_REGION}'
      - '--project=${PROJECT_ID}'
    id: 'Get GKE Credentials'
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: kubectl
    args:
      - apply
      - -f
      - 'k8s/'
      - '--namespace=${_K8S_NAMESPACE}'
    id: 'Apply Manifests'
    waitFor: [ 'Get GKE Credentials' ]
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: kubectl
    args:
      - set
      - image
      - deployment/${_K8S_DEPLOYMENT_NAME}
      - ${_K8S_CONTAINER_NAME}=${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:$COMMIT_SHA
      - '--namespace=${_K8S_NAMESPACE}'
    id: 'Set Image'
    waitFor: [ 'Apply Manifests' ]

images:
  - "${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:$COMMIT_SHA"

logsBucket: 'gs://${_STORAGE_BUCKET}/${_SERVICE_NAME}/'

timeout: '1200s'